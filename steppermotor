#include <AccelStepper.h>
#include <Adafruit_MotorShield.h>
float angle;
float angle_2;
Adafruit_MotorShield AFMSbot(0x61); // Rightmost jumper closed
Adafruit_MotorShield AFMStop(0x60); // Default address, no jumpers

// Connect two steppers with 200 steps per revolution (1.8 degree)
// to the top shield
Adafruit_StepperMotor *myStepper1 = AFMStop.getStepper(200, 1);
Adafruit_StepperMotor *myStepper2 = AFMStop.getStepper(200, 2);

// Connect one stepper with 200 steps per revolution (1.8 degree)
// to the bottom shield

// you can change these to SINGLE or DOUBLE or INTERLEAVE or MICROSTEP!
// wrappers for the first motor!
void forwardstep1() {
  myStepper1->onestep(FORWARD, DOUBLE);
}
void backwardstep1() {
  myStepper1->onestep(BACKWARD, DOUBLE);
}
// wrappers for the second motor!
void forwardstep2() {
  myStepper2->onestep(FORWARD, DOUBLE);
}
void backwardstep2() {
  myStepper2->onestep(BACKWARD, DOUBLE);
}


// Now we'll wrap the 2 steppers in an AccelStepper object
AccelStepper stepper1(forwardstep1, backwardstep1); //Original code
AccelStepper stepper2(forwardstep2, backwardstep2); //Original code

void setup()
{
  AFMSbot.begin(); // Start the bottom shield
  AFMStop.begin(); // Start the top shield
  
  while (Serial.available() == 0) {
    
  }
  
  angle = Serial.parseInt();
  Serial.println("The black motor will move: ");
  Serial.println(angle);
  
  while (Serial.available() == 0) {
    
  }

  
  angle_2 = Serial.parseInt();
  Serial.println("The grey motor will move: ");
  Serial.println(angle_2);
  
  stepper1.setMaxSpeed(100.0);
  //Use ratio of steps * speed = steps * speed!
  //Possibly change MaxSpeed to 200.0 and see if that helps with the problem.
  stepper1.setAcceleration(100.0);
  stepper1.moveTo(angle * 100 / 360);

  stepper2.setMaxSpeed(100.0);
  stepper2.setAcceleration(100.0);
  stepper2.moveTo(angle_2 * 100 / 360);
}

void loop()
{
    // Change direction at the limits
    if (stepper1.distanceToGo() == 0)
  stepper1.moveTo(-stepper1.currentPosition());

    if (stepper2.distanceToGo() == 0)
  stepper2.moveTo(-stepper2.currentPosition());

    stepper1.run();
    stepper2.run();
}
